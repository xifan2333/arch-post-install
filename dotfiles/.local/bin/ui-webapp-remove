#!/bin/bash
# Remove web application desktop entries

source "$HOME/.local/lib/lib-ui-i18n"

ICON_DIR="$HOME/.local/share/applications/icons"
DESKTOP_DIR="$HOME/.local/share/applications"

if [ "$#" -eq 0 ]; then
    # Interactive mode - find all web apps
    WEB_APPS=()
    while IFS= read -r -d '' file; do
        if grep -q '^Exec=.*ui-webapp-launch.*' "$file"; then
            WEB_APPS+=("$(basename "${file%.desktop}")")
        fi
    done < <(find "$DESKTOP_DIR" -name '*.desktop' -print0)

    if [ ${#WEB_APPS[@]} -eq 0 ]; then
        echo "No web apps found"
        if command -v notify-send >/dev/null 2>&1; then
            notify-send "$(msg webapp_remove_notify_title)" "$(msg webapp_remove_notify_none)"
        fi
        exit 1
    fi

    # Sort the apps
    IFS=$'\n' SORTED_WEB_APPS=($(sort <<<"${WEB_APPS[*]}"))
    unset IFS

    # Use ui-wofi for selection
    APP_NAMES_STRING=$(printf "%s\n" "${SORTED_WEB_APPS[@]}" | ui-wofi --dmenu -p "$(msg webapp_remove_prompt)")

    # Convert newline-separated string to array
    APP_NAMES=()
    while IFS= read -r line; do
        [[ -n "$line" ]] && APP_NAMES+=("$line")
    done <<< "$APP_NAMES_STRING"
else
    # Use array to preserve spaces in app names
    APP_NAMES=("$@")
fi

if [[ ${#APP_NAMES[@]} -eq 0 ]]; then
    echo "No app selected"
    exit 0
fi

# Remove selected apps
for APP_NAME in "${APP_NAMES[@]}"; do
    rm -f "$DESKTOP_DIR/$APP_NAME.desktop"
    rm -f "$ICON_DIR/$APP_NAME.png"
    echo "Removed: $APP_NAME"
done

# Update desktop database
if command -v update-desktop-database >/dev/null 2>&1; then
    update-desktop-database "$HOME/.local/share/applications" 2>/dev/null || true
fi

if [ "$#" -eq 0 ] && command -v notify-send >/dev/null 2>&1; then
    notify-send "$(msg webapp_remove_notify_title)" "$(msg webapp_remove_notify_success "${#APP_NAMES[@]}")"
fi
