#!/bin/bash
# Wallpaper switcher with local and network (Bing) modes
# Usage: ui-wallpaper

set -e

# Load i18n
source "$HOME/.local/lib/lib-ui-i18n"

# Wallpaper state file - stores current wallpaper path
WALLPAPER_STATE="$HOME/.config/current/wallpaper"

# Wallpaper directory - user's Pictures folder
XDG_PICTURES_DIR="${XDG_PICTURES_DIR:-$HOME/Pictures}"
WALLPAPER_DIR="$XDG_PICTURES_DIR/wallpapers"

# Ensure wallpaper directory exists
mkdir -p "$WALLPAPER_DIR"

# Notification helper
notify() {
    if command -v notify-send >/dev/null 2>&1; then
        notify-send "${i18n[wallpaper_title]}" "$1"
    fi
}

# Set wallpaper using swaybg (Wayland)
set_wallpaper() {
    local wallpaper="$1"

    # Kill existing swaybg
    pkill swaybg 2>/dev/null || true

    # Start new swaybg in background
    swaybg -i "$wallpaper" -m fill &

    # Save wallpaper path to state file
    mkdir -p "$(dirname "$WALLPAPER_STATE")"
    echo "$wallpaper" > "$WALLPAPER_STATE"

}

# Download Bing daily wallpaper
download_bing_wallpaper() {

    # Bing wallpaper API
    BING_API="https://bing.img.run/rand.php"

    # Use fixed filename to avoid file redundancy (overwrite on each download)
    FILENAME="bing.jpg"
    WALLPAPER_PATH="$WALLPAPER_DIR/$FILENAME"

    # Download wallpaper (overwrite if exists)
    if ! curl -L -s -o "$WALLPAPER_PATH" "$BING_API"; then
        notify "${i18n[wallpaper_bing_failed]}"
        echo "${i18n[wallpaper_bing_error]}" >&2
        exit 1
    fi

    # Set as wallpaper
    set_wallpaper "$WALLPAPER_PATH"
    notify "${i18n[wallpaper_bing_success]}"
}

# Select wallpaper from local directory
select_local_wallpaper() {
    # Find all image files in wallpaper directory
    local images=$(find "$WALLPAPER_DIR" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.webp" \) -printf "%f\n" | sort)

    if [ -z "$images" ]; then
        notify "${i18n[wallpaper_none_found]}"
        echo "Error: ${i18n[wallpaper_none_found]}" >&2
        exit 1
    fi

    # Show selection menu
    local selected=$(echo "$images" | ui-wofi --dmenu -p "${i18n[wallpaper_prompt]}")

    # User cancelled
    [ -z "$selected" ] && exit 0

    # Set wallpaper
    WALLPAPER_PATH="$WALLPAPER_DIR/$selected"
    set_wallpaper "$WALLPAPER_PATH"
    notify "$(msg wallpaper_set name "$selected")"
}

# Main menu
MODE=$(printf "%s\n%s" "${i18n[wallpaper_mode_local]}" "${i18n[wallpaper_mode_bing]}" | ui-wofi --dmenu -p "${i18n[wallpaper_mode_prompt]}")

# User cancelled
[ -z "$MODE" ] && exit 0

case "$MODE" in
    "${i18n[wallpaper_mode_local]}")
        select_local_wallpaper
        ;;
    "${i18n[wallpaper_mode_bing]}")
        download_bing_wallpaper
        ;;
    *)
        echo "${i18n[wallpaper_invalid_mode]}" >&2
        exit 1
        ;;
esac
