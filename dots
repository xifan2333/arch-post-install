#!/bin/bash
# Bi-directional sync script for dotfiles development
# Syncs between repo and ~/.dotfiles with explicit direction control

# Output functions
print_step() { echo -e "\n\033[0;34m==>\033[0m \033[1;37m$1\033[0m"; }
print_substep() { echo -e "  \033[0;35m->\033[0m $1"; }
print_error() { echo -e "\033[0;31m[ERROR]\033[0m $1" >&2; }
print_success() { echo -e "\033[0;32m[OK]\033[0m $1"; }
print_info() { echo -e "\033[0;34m[INFO]\033[0m $1"; }
print_warning() { echo -e "\033[1;33m[WARNING]\033[0m $1"; }

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DOTFILES_REPO="$SCRIPT_DIR/dotfiles"
DOTFILES_HOME="$HOME/.dotfiles"

# Show usage
show_usage() {
    cat << EOF
Usage: $0 [push|pull|auto]

Sync dotfiles between repository and ~/.dotfiles

Options:
  push    Copy from repository to ~/.dotfiles (for deploying)
  pull    Copy from ~/.dotfiles to repository (for saving changes)
  auto    Bi-directional sync, keeping newest files (default)

Examples:
  $0 push    # Deploy dotfiles from repo to ~/.dotfiles
  $0 pull    # Save changes from ~/.dotfiles to repo
  $0 auto    # Sync both ways, keeping newest
EOF
    exit 1
}

# Check if rsync is installed
if ! command -v rsync &> /dev/null; then
    print_error "rsync is not installed. Please install it first."
    exit 1
fi

# Create ~/.dotfiles if it doesn't exist
if [ ! -d "$DOTFILES_HOME" ]; then
    print_info "Creating $DOTFILES_HOME"
    mkdir -p "$DOTFILES_HOME"
fi

# Parse direction argument
DIRECTION="${1:-auto}"

case "$DIRECTION" in
    push)
        print_step "Pushing dotfiles: repository -> ~/.dotfiles"
        print_substep "Syncing $DOTFILES_REPO -> ~/.dotfiles"
        rsync -av --delete "$DOTFILES_REPO/" "$DOTFILES_HOME/"
        print_success "Dotfiles deployed to ~/.dotfiles successfully"
        ;;

    pull)
        print_step "Pulling dotfiles: ~/.dotfiles -> repository"
        print_substep "Syncing ~/.dotfiles -> $DOTFILES_REPO"
        rsync -av --delete "$DOTFILES_HOME/" "$DOTFILES_REPO/"
        print_success "Changes saved to repository successfully"
        ;;

    auto)
        print_step "Auto-syncing dotfiles (keeping newest files)"
        print_substep "Syncing repo -> ~/.dotfiles (update if newer)"
        rsync -av --update "$DOTFILES_REPO/" "$DOTFILES_HOME/"
        print_substep "Syncing ~/.dotfiles -> repo (update if newer)"
        rsync -av --update "$DOTFILES_HOME/" "$DOTFILES_REPO/"
        print_success "Dotfiles synced successfully"
        print_info "Both locations now have the latest files"
        ;;

    -h|--help|help)
        show_usage
        ;;

    *)
        print_error "Invalid direction: $DIRECTION"
        echo ""
        show_usage
        ;;
esac

# Show summary of what was synced
print_step "Summary"
echo "Repository: $DOTFILES_REPO"
echo "Home:       $DOTFILES_HOME"
echo ""
echo "Available packages:"
cd "$DOTFILES_HOME" && ls -d */ 2>/dev/null | sed 's/\///g' | while read pkg; do
    echo "  - $pkg"
done
