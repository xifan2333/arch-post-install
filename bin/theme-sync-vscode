#!/bin/bash
# Sync VSCode theme with current system theme
# Based on omarchy-theme-set-vscode

set -e

VSCODE_THEME_FILE="$HOME/.config/current/vscode.json"
VSCODE_SETTINGS="$HOME/.config/Code/User/settings.json"

# Check if VSCode is installed
if ! command -v code >/dev/null 2>&1; then
    # VSCode not installed, exit silently
    exit 0
fi

# Check if theme has VSCode configuration
if [ ! -f "$VSCODE_THEME_FILE" ]; then
    # No VSCode theme defined for this theme
    # Remove theme setting from settings.json if it exists
    if [ -f "$VSCODE_SETTINGS" ]; then
        sed -i --follow-symlinks -E '/"workbench\.colorTheme"[[:space:]]*:[^,}]*,?/d' "$VSCODE_SETTINGS"
    fi
    exit 0
fi

# Read theme configuration using jq
if ! command -v jq >/dev/null 2>&1; then
    echo "Warning: jq not installed, cannot sync VSCode theme" >&2
    exit 1
fi

THEME_NAME=$(jq -r '.name' "$VSCODE_THEME_FILE")
EXTENSION=$(jq -r '.extension' "$VSCODE_THEME_FILE")

# Install VSCode theme extension if needed
if [ -n "$EXTENSION" ] && [ "$EXTENSION" != "null" ]; then
    if ! code --list-extensions | grep -Fxq "$EXTENSION"; then
        echo "Installing VSCode theme extension: $EXTENSION"
        code --install-extension "$EXTENSION" >/dev/null 2>&1
    fi
fi

# Create settings directory if it doesn't exist
mkdir -p "$(dirname "$VSCODE_SETTINGS")"

# Create settings file if it doesn't exist
if [ ! -f "$VSCODE_SETTINGS" ]; then
    printf '{\n}\n' > "$VSCODE_SETTINGS"
fi

# Add workbench.colorTheme entry if it doesn't exist
if ! grep -q '"workbench.colorTheme"' "$VSCODE_SETTINGS"; then
    # Insert "workbench.colorTheme": "" immediately after the first {
    sed -i --follow-symlinks -E '0,/\{/{s/\{/{\
  "workbench.colorTheme": "",/}' "$VSCODE_SETTINGS"
fi

# Update theme setting
sed -i --follow-symlinks -E \
    "s/(\"workbench.colorTheme\"[[:space:]]*:[[:space:]]*\")[^\"]*(\")/\1$THEME_NAME\2/" \
    "$VSCODE_SETTINGS"

echo "VSCode theme updated to: $THEME_NAME"
