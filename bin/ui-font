#!/bin/bash
# Interactive font switcher with wofi
# Usage: ui-font

set -e

# Load i18n
source i18n-core

# Auto-detect Nerd Font Mono fonts from system
get_nerd_fonts() {
    fc-list : family style | grep -i "nerd font mono" | cut -d: -f1 | cut -d, -f1 | sort -u
}

# Get available fonts
FONTS=$(get_nerd_fonts)

if [ -z "$FONTS" ]; then
    if command -v notify-send >/dev/null 2>&1; then
        notify-send "${i18n[font_title]}" "${i18n[font_error_not_found]}"
    fi
    exit 1
fi

# Get current font
CURRENT_FONT=$(font-get-current 2>/dev/null || echo "")

# Mark current font in list
if [ -n "$CURRENT_FONT" ]; then
    FONTS=$(echo "$FONTS" | sed "s/^$CURRENT_FONT$/${i18n[current_marker]} $CURRENT_FONT/")
fi

# Show font menu
SELECTED=$(echo "$FONTS" | ui-wofi --dmenu -p "${i18n[font_prompt]}")

# User cancelled
[ -z "$SELECTED" ] && exit 0

# Remove marker if present
FONT_NAME=$(echo "$SELECTED" | sed "s/^${i18n[current_marker]} //")

# Set the font using font-set
if font-set "$FONT_NAME"; then
    # Notification is handled by font-set
    :
else
    if command -v notify-send >/dev/null 2>&1; then
        notify-send "${i18n[font_switch_failed_title]}" "$(msg font_switch_failed_msg font "$FONT_NAME")"
    fi
    exit 1
fi
